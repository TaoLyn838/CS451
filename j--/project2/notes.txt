1. Enter the number of hours it took you to complete the project between
   the <<< and >>> signs below (eg, <<<10>>>).

   <<< 10 >>>
   
2. Enter the difficulty level (1: very easy; 5: very difficult) of the project
   between the <<< and >>> signs below (eg, <<<3>>>).

   <<< 2 >>>

3. Did you receive help from anyone? List their names, status (classmate, 
   CS451/651 grad, TA, other), and the nature of help received.

   Name               Status       Help Received
   ----               ------       -------------

4. List any other comments here. Feel free to provide any feedback on how
   much you learned from doing the assignment, and whether you enjoyed
   doing it.

   Implementing code location:
    a) Scanner.java
        line#: 53-88 | reserved word
        line#: 117-133 | multiline comment support
        line#: 168-303 | additional operators support
        line#: 362-450 | long, and double literals support
        line#: 548-556 | helper methods isExponent(), and isSuffix() for double literal.
        line#: 575-605 | helper methods exponent(), and digits() for literals.

    b) TokenInfo.java
        line#: 14-22, 31-34, 45-46

    Comment:
    This project is more straightforward than the last one, but I am confused about the literals part in TokenInfo.java.
        In the j-- grammars, the null, true, and false are fixed in reserved words, but they wrote in the literals part
        in TokenInfo. Is it because j-- use the null token to represent both Null Literals and reserved word; true and
        false token to show boolean literals and reserved word?